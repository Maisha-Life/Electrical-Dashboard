<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    
                    xmlns:Converters="clr-namespace:EDDLL.Views._Converters;assembly=EDDLL"
                    xmlns:ViewModels="clr-namespace:EDRules.ViewModels.ModelsVM">
    
    <DataTemplate x:Key="ruleListItem" DataType="{x:Type ViewModels:vmRule}">
        <DataTemplate.Resources>
            <Storyboard x:Key="mouseEnter">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" >
                    <EasingColorKeyFrame KeyTime="0:0:0.1" Value="#5078E072"/>
                </ColorAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="mouseLeave">
                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" Storyboard.TargetName="grid" FillBehavior="Stop"/>
            </Storyboard>
        </DataTemplate.Resources>
        <DockPanel x:Name="grid" Background="White" LastChildFill="False">
            <Grid Height="auto" Margin="0,2" DockPanel.Dock="Top">
                <Grid.Resources>
                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource customButtonWithContent}">
                        <Setter Property="Height" Value="32"/>
                    </Style>
                    <Style TargetType="{x:Type TextBlock}">
                        <Setter Property="FontSize" Value="11"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Foreground" Value="Black"/>
                        <Setter Property="FontWeight" Value="Thin"/>
                        <Setter Property="Margin" Value="5,0,0,0"/>
                        <Setter Property="TextWrapping" Value="Wrap"/>
                        <Setter Property="HorizontalAlignment" Value="Left"/>
                    </Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="FontSize" Value="11"/>
                    </Style>
                </Grid.Resources>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="175"/>
                    <ColumnDefinition />
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="160"/>
                    <ColumnDefinition Width="125"/>
                </Grid.ColumnDefinitions>

                <Image Height="25" >
                    <Image.Resources>
                        <Style TargetType="{x:Type Image}">
                            <Setter Property="Source" Value="/EDDLL;component/Resources/Images/Status/goodStatus.png"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding ruleStatus}" Value="1">
                                    <Setter Property="Source" Value="/EDDLL;component/Resources/Images/Status/warningStatus.png"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding ruleStatus}" Value="2">
                                    <Setter Property="Source" Value="/EDDLL;component/Resources/Images/Status/errorStatus.png"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Resources>
                </Image>
                <TextBlock Grid.Column="1" Text="{Binding DesignRuleProp.Saved}" FontWeight="Normal" FontSize="12" VerticalAlignment="Center"/>
                <TextBlock Grid.Column="2" Grid.ColumnSpan="2" Text="{Binding RuleNameProp.Saved}" />               
                <TextBlock Grid.Column="4">
                    <TextBlock.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{Binding RuleCheckDescProp.Saved}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RuleCheckDescProp.Saved}" Value="">
                                    <Setter Property="Text" Value="- no check method defined -"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="{StaticResource ErrorColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Resources>
                </TextBlock>
                <TextBlock Grid.Column="5" >
                    <TextBlock.Resources>
                        <Style TargetType="TextBlock">
                            <Setter Property="Text" Value="{Binding RuleRepairDescProp.Saved}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RuleRepairDescProp.Saved}" Value="">
                                    <Setter Property="Text" Value="- no repair method defined -"/>
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="HorizontalAlignment" Value="Center"/>
                                    <Setter Property="FontSize" Value="10"/>
                                    <Setter Property="Foreground" Value="{StaticResource ErrorColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Resources>
                </TextBlock>
               
                <WrapPanel Grid.Column="7" VerticalAlignment="Center" Margin="25,0">
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource customButtonWithContent}">
                            <Setter Property="Height" Value="28"/>
                            <Setter Property="Margin" Value="5,0,0,0"/>
                        </Style>
                    </WrapPanel.Resources>
                    <Button Command="{Binding EditRuleCommand}" ToolTip="Edit Rule">
                        <Image Source="/EDDLL;component/Resources/Images/edit.png" />
                    </Button>
                    <Button Command="{Binding RemoveRuleCommand}" ToolTip="Remove Rule">
                        <Image Source="/EDDLL;component/Resources/Images/remove.png" />
                    </Button>
                </WrapPanel>
            </Grid>
        </DockPanel>
        <DataTemplate.Triggers>
            <EventTrigger RoutedEvent="Mouse.MouseLeave" SourceName="grid">
                <BeginStoryboard x:Name="mouseLeave_BeginStoryboard" Storyboard="{StaticResource mouseLeave}"/>
            </EventTrigger>
            <EventTrigger RoutedEvent="Mouse.MouseEnter" SourceName="grid">
                <BeginStoryboard Storyboard="{StaticResource mouseEnter}"/>
            </EventTrigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                <Setter Property="Background" Value="#1978E072" TargetName="grid"/>
            </Trigger>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="white" TargetName="grid"/>
            </Trigger>
        </DataTemplate.Triggers>
    </DataTemplate>    

    <DataTemplate x:Key="measurementItem" DataType="{x:Type ViewModels:vmMeasurement}">
        <Grid Height="26" Margin="0,2">
            <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="60"/>
                </Grid.ColumnDefinitions>
            <Grid VerticalAlignment="Center" Margin="3,0,0,0">
                <TextBlock Text="{Binding MeasurementDescProp.Saved}" Style="{StaticResource savedTextBlock}"/>
                <TextBox x:Name="constructDescTB" Text="{Binding MeasurementDesc, ValidatesOnDataErrors=True, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource changedTextBox}"/>
            </Grid>
            <Grid VerticalAlignment="Center" Grid.Column="1">
                <WrapPanel>
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type WrapPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditBool}" Value="True">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <ToggleButton IsChecked="{Binding EditBool}" Style="{StaticResource customToggleButtonWithContent}" 
                          VerticalAlignment="Center" DockPanel.Dock="Left" ToolTip="Edit Constraint">
                        <Image Source="/EDDLL;component/Resources/Images/Circle/editCircle.png" Height="14"/>
                    </ToggleButton>
                    <Button Command="{Binding RemoveMeasurementCommand}" ToolTip="Remove Constraint">
                        <Image Source="/EDDLL;component/Resources/Images/Circle/removeCircle.png" Height="14"/>
                    </Button>
                </WrapPanel>
                <WrapPanel >
                    <WrapPanel.Resources>
                        <Style TargetType="{x:Type WrapPanel}">
                            <Setter Property="Visibility" Value="Visible"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding EditBool}" Value="False">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </WrapPanel.Resources>
                    <Button Command="{Binding CancelMeasurementCommand}" ToolTip="Cancel Constraint">
                        <Image Source="/EDDLL;component/Resources/Images/Circle/cancelCircle.png" Height="15"/>
                    </Button>
                    <Button Command="{Binding SaveMeasurementCommand}" ToolTip="Save Constraint">
                        <Image Source="/EDDLL;component/Resources/Images/Circle/saveCircle.png" Height="15"/>
                    </Button>
                </WrapPanel>
            </Grid>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="harnessComponentTagSelect" DataType="{x:Type ViewModels:vmParameter}">
        <DockPanel Height="15" LastChildFill="False">
            <ToggleButton IsChecked="{Binding SelectedBool}" Style="{StaticResource completeToggleButton}" Height="10" Width="10"/>
            <TextBlock Width="75" FontSize="10" Margin="4,0,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding Description}"/>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="milestoneTagSelect" DataType="{x:Type ViewModels:vmParameter}">
        <DockPanel Height="15" LastChildFill="False">
            <ToggleButton IsChecked="{Binding SelectedBool}" Style="{StaticResource completeToggleButton}" Height="10" Width="10"/>
            <TextBlock Width="50" FontSize="10" Margin="4,0,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding Description}"/>
        </DockPanel>
    </DataTemplate>
    <DataTemplate x:Key="harnessTagSelect" DataType="{x:Type ViewModels:vmParameter}">
        <DockPanel Height="15" LastChildFill="False">
            <ToggleButton IsChecked="{Binding SelectedBool}" Style="{StaticResource completeToggleButton}" Height="10" Width="10"/>
            <TextBlock Width="150" FontSize="10" Margin="4,0,0,0" TextTrimming="CharacterEllipsis" VerticalAlignment="Center" Text="{Binding Description}"/>
        </DockPanel>
    </DataTemplate>
</ResourceDictionary>